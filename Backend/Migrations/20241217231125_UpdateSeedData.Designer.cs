// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241217231125_UpdateSeedData")]
    partial class UpdateSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BodyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Capacity")
                        .HasColumnType("real");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PricePerDay")
                        .HasColumnType("real");

                    b.Property<int>("ProductionYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BodyType = "Kombi",
                            Brand = "Toyota",
                            Capacity = 1.6f,
                            Color = "Biały",
                            FuelType = "Benzyna",
                            ImageUrl = "/img1.jpg",
                            Model = "Corolla",
                            PricePerDay = 370f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 2,
                            BodyType = "Hatchback",
                            Brand = "Ford",
                            Capacity = 2.2f,
                            Color = "Niebieski",
                            FuelType = "Diesel",
                            ImageUrl = "/img2.jpg",
                            Model = "Focus",
                            PricePerDay = 320f,
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = 3,
                            BodyType = "Hatchback",
                            Brand = "Honda",
                            Capacity = 1.8f,
                            Color = "Czerwony",
                            FuelType = "Benzyna",
                            ImageUrl = "/img3.jpg",
                            Model = "Civic",
                            PricePerDay = 110f,
                            ProductionYear = 2007
                        },
                        new
                        {
                            Id = 4,
                            BodyType = "SUV",
                            Brand = "BMW",
                            Capacity = 3f,
                            Color = "Czarny",
                            FuelType = "Diesel",
                            ImageUrl = "/img4.jpg",
                            Model = "X5",
                            PricePerDay = 226f,
                            ProductionYear = 2010
                        },
                        new
                        {
                            Id = 5,
                            BodyType = "Sedan",
                            Brand = "Audi",
                            Capacity = 2f,
                            Color = "Czarny",
                            FuelType = "Benzyna",
                            ImageUrl = "/img5.jpg",
                            Model = "A4",
                            PricePerDay = 415f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 6,
                            BodyType = "Hatchback",
                            Brand = "Volkswagen",
                            Capacity = 2f,
                            Color = "Niebieski",
                            FuelType = "Diesel",
                            ImageUrl = "/img6.jpg",
                            Model = "Golf",
                            PricePerDay = 290f,
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = 7,
                            BodyType = "Sedan",
                            Brand = "Mercedes",
                            Capacity = 2f,
                            Color = "Czerwony",
                            FuelType = "Benzyna",
                            ImageUrl = "/img7.jpg",
                            Model = "C-Class",
                            PricePerDay = 470f,
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = 8,
                            BodyType = "Hatchback",
                            Brand = "Opel",
                            Capacity = 1.7f,
                            Color = "Niebieski",
                            FuelType = "Diesel",
                            ImageUrl = "/img8.jpg",
                            Model = "Astra",
                            PricePerDay = 260f,
                            ProductionYear = 2014
                        },
                        new
                        {
                            Id = 9,
                            BodyType = "Sedan",
                            Brand = "Ford",
                            Capacity = 2f,
                            Color = "Czerwony",
                            FuelType = "Benzyna",
                            ImageUrl = "/img9.jpg",
                            Model = "Mondeo",
                            PricePerDay = 330f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 10,
                            BodyType = "Kombi",
                            Brand = "Skoda",
                            Capacity = 1.9f,
                            Color = "Srebrny",
                            FuelType = "Diesel",
                            ImageUrl = "/img10.jpg",
                            Model = "Octavia",
                            PricePerDay = 215f,
                            ProductionYear = 2011
                        },
                        new
                        {
                            Id = 11,
                            BodyType = "Hatchback",
                            Brand = "Renault",
                            Capacity = 1.6f,
                            Color = "Żółty",
                            FuelType = "Benzyna",
                            ImageUrl = "/img11.jpg",
                            Model = "Megane",
                            PricePerDay = 450f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 12,
                            BodyType = "SUV",
                            Brand = "Nissan",
                            Capacity = 2f,
                            Color = "Niebieski",
                            FuelType = "Diesel",
                            ImageUrl = "/img12.jpg",
                            Model = "Qashqai",
                            PricePerDay = 390f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 13,
                            BodyType = "Sedan",
                            Brand = "Mazda",
                            Capacity = 2.5f,
                            Color = "Czerwony",
                            FuelType = "Benzyna",
                            ImageUrl = "/img13.jpg",
                            Model = "6",
                            PricePerDay = 520f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 14,
                            BodyType = "Kombi",
                            Brand = "Peugeot",
                            Capacity = 1.6f,
                            Color = "Szary",
                            FuelType = "Diesel",
                            ImageUrl = "/img14.jpg",
                            Model = "308",
                            PricePerDay = 300f,
                            ProductionYear = 2015
                        },
                        new
                        {
                            Id = 15,
                            BodyType = "Kombi",
                            Brand = "Volkswagen",
                            Capacity = 2f,
                            Color = "Biały",
                            FuelType = "Benzyna",
                            ImageUrl = "/img15.jpg",
                            Model = "Passat",
                            PricePerDay = 550f,
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = 16,
                            BodyType = "Hatchback",
                            Brand = "Fiat",
                            Capacity = 1.2f,
                            Color = "Biały",
                            FuelType = "Benzyna",
                            ImageUrl = "/img16.jpg",
                            Model = "500",
                            PricePerDay = 370f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 17,
                            BodyType = "SUV",
                            Brand = "Audi",
                            Capacity = 3f,
                            Color = "Czarny",
                            FuelType = "Diesel",
                            ImageUrl = "/img17.jpg",
                            Model = "Q7",
                            PricePerDay = 590f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 18,
                            BodyType = "SUV",
                            Brand = "Kia",
                            Capacity = 2f,
                            Color = "Biały",
                            FuelType = "Diesel",
                            ImageUrl = "/img18.jpg",
                            Model = "Sportage",
                            PricePerDay = 440f,
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = 19,
                            BodyType = "Hatchback",
                            Brand = "Hyundai",
                            Capacity = 1.4f,
                            Color = "Niebieski",
                            FuelType = "Benzyna",
                            ImageUrl = "/img19.jpg",
                            Model = "i30",
                            PricePerDay = 620f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 20,
                            BodyType = "SUV",
                            Brand = "Suzuki",
                            Capacity = 1.9f,
                            Color = "Czerwony",
                            FuelType = "Diesel",
                            ImageUrl = "/img20.jpg",
                            Model = "Vitara",
                            PricePerDay = 380f,
                            ProductionYear = 2015
                        },
                        new
                        {
                            Id = 21,
                            BodyType = "SUV",
                            Brand = "Citroen",
                            Capacity = 1.6f,
                            Color = "Pomarańczowy",
                            FuelType = "Benzyna",
                            ImageUrl = "/img21.jpg",
                            Model = "C4",
                            PricePerDay = 500f,
                            ProductionYear = 2021
                        },
                        new
                        {
                            Id = 22,
                            BodyType = "SUV",
                            Brand = "Ford",
                            Capacity = 2f,
                            Color = "Czarny",
                            FuelType = "Diesel",
                            ImageUrl = "/img22.jpg",
                            Model = "Kuga",
                            PricePerDay = 460f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 23,
                            BodyType = "Sedan",
                            Brand = "BMW",
                            Capacity = 2f,
                            Color = "Szary",
                            FuelType = "Benzyna",
                            ImageUrl = "/img23.jpg",
                            Model = "Seria 3",
                            PricePerDay = 660f,
                            ProductionYear = 2021
                        },
                        new
                        {
                            Id = 24,
                            BodyType = "SUV",
                            Brand = "Toyota",
                            Capacity = 2.2f,
                            Color = "Czerwony",
                            FuelType = "Diesel",
                            ImageUrl = "/img24.jpg",
                            Model = "RAV4",
                            PricePerDay = 540f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 25,
                            BodyType = "Sedan",
                            Brand = "Honda",
                            Capacity = 2.4f,
                            Color = "Czerwony",
                            FuelType = "Benzyna",
                            ImageUrl = "/img25.jpg",
                            Model = "Accord",
                            PricePerDay = 410f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 26,
                            BodyType = "SUV",
                            Brand = "Mazda",
                            Capacity = 2.2f,
                            Color = "Czerwony",
                            FuelType = "Diesel",
                            ImageUrl = "/img26.jpg",
                            Model = "CX-5",
                            PricePerDay = 565f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 27,
                            BodyType = "SUV",
                            Brand = "Hyundai",
                            Capacity = 2f,
                            Color = "Granatowy",
                            FuelType = "Diesel",
                            ImageUrl = "/img27.jpg",
                            Model = "Tucson",
                            PricePerDay = 370f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 28,
                            BodyType = "Hatchback",
                            Brand = "Audi",
                            Capacity = 1.8f,
                            Color = "Czerwony",
                            FuelType = "Benzyna",
                            ImageUrl = "/img28.jpg",
                            Model = "A3",
                            PricePerDay = 450f,
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = 29,
                            BodyType = "SUV",
                            Brand = "Mercedes",
                            Capacity = 2.1f,
                            Color = "Srebrny",
                            FuelType = "Diesel",
                            ImageUrl = "/img29.jpg",
                            Model = "GLC",
                            PricePerDay = 600f,
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = 30,
                            BodyType = "SUV",
                            Brand = "Volkswagen",
                            Capacity = 2f,
                            Color = "Szary",
                            FuelType = "Diesel",
                            ImageUrl = "/img30.jpg",
                            Model = "Tiguan",
                            PricePerDay = 550f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 31,
                            BodyType = "SUV",
                            Brand = "Jeep",
                            Capacity = 3f,
                            Color = "Czerwony",
                            FuelType = "Diesel",
                            ImageUrl = "/img31.jpg",
                            Model = "Grand Cherokee",
                            PricePerDay = 530f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 32,
                            BodyType = "Hatchback",
                            Brand = "Ford",
                            Capacity = 1f,
                            Color = "Niebieski",
                            FuelType = "Benzyna",
                            ImageUrl = "/img32.jpg",
                            Model = "Fiesta",
                            PricePerDay = 325f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 33,
                            BodyType = "Hatchback",
                            Brand = "Toyota",
                            Capacity = 1.3f,
                            Color = "Czerwony",
                            FuelType = "Benzyna",
                            ImageUrl = "/img33.jpg",
                            Model = "Yaris",
                            PricePerDay = 300f,
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = 34,
                            BodyType = "Kombi",
                            Brand = "Renault",
                            Capacity = 1.5f,
                            Color = "Czerwony",
                            FuelType = "Diesel",
                            ImageUrl = "/img34.jpg",
                            Model = "Clio",
                            PricePerDay = 440f,
                            ProductionYear = 2015
                        },
                        new
                        {
                            Id = 35,
                            BodyType = "SUV",
                            Brand = "BMW",
                            Capacity = 2f,
                            Color = "Czarny",
                            FuelType = "Diesel",
                            ImageUrl = "/img35.jpg",
                            Model = "X3",
                            PricePerDay = 620f,
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = 36,
                            BodyType = "Kabriolet",
                            Brand = "Mazda",
                            Capacity = 2f,
                            Color = "Czerwony",
                            FuelType = "Benzyna",
                            ImageUrl = "/img36.jpg",
                            Model = "MX-5",
                            PricePerDay = 660f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 37,
                            BodyType = "Hatchback",
                            Brand = "Volkswagen",
                            Capacity = 1f,
                            Color = "Szary",
                            FuelType = "Benzyna",
                            ImageUrl = "/img37.jpg",
                            Model = "Polo",
                            PricePerDay = 470f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 38,
                            BodyType = "SUV",
                            Brand = "Honda",
                            Capacity = 2.2f,
                            Color = "Szary",
                            FuelType = "Diesel",
                            ImageUrl = "/img38.jpg",
                            Model = "CR-V",
                            PricePerDay = 510f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 39,
                            BodyType = "SUV",
                            Brand = "Nissan",
                            Capacity = 1.6f,
                            Color = "Czerwony",
                            FuelType = "Benzyna",
                            ImageUrl = "/img39.jpg",
                            Model = "Juke",
                            PricePerDay = 530f,
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = 40,
                            BodyType = "SUV",
                            Brand = "Peugeot",
                            Capacity = 1.6f,
                            Color = "Biały",
                            FuelType = "Diesel",
                            ImageUrl = "/img40.jpg",
                            Model = "2008",
                            PricePerDay = 420f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 41,
                            BodyType = "Sedan",
                            Brand = "Audi",
                            Capacity = 3.7f,
                            Color = "Czarny ",
                            FuelType = "Benzyna",
                            ImageUrl = "/img41.jpg",
                            Model = "A8",
                            PricePerDay = 770f,
                            ProductionYear = 2021
                        },
                        new
                        {
                            Id = 42,
                            BodyType = "SUV",
                            Brand = "Porsche",
                            Capacity = 3.8f,
                            Color = "Szary",
                            FuelType = "Benzyna",
                            ImageUrl = "/img42.jpg",
                            Model = "Cayenne",
                            PricePerDay = 950f,
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = 43,
                            BodyType = "Sedan",
                            Brand = "BMW",
                            Capacity = 4f,
                            Color = "Czarny",
                            FuelType = "Benzyna",
                            ImageUrl = "/img43.jpg",
                            Model = "M5",
                            PricePerDay = 1100f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 44,
                            BodyType = "Sedan",
                            Brand = "Mercedes",
                            Capacity = 3.9f,
                            Color = "Srebrny",
                            FuelType = "Benzyna",
                            ImageUrl = "/img44.jpg",
                            Model = "S-Class",
                            PricePerDay = 850f,
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = 45,
                            BodyType = "Coupe",
                            Brand = "Jaguar",
                            Capacity = 3.8f,
                            Color = "Niebieski",
                            FuelType = "Benzyna",
                            ImageUrl = "/img45.jpg",
                            Model = "F-Type",
                            PricePerDay = 1350f,
                            ProductionYear = 2021
                        },
                        new
                        {
                            Id = 46,
                            BodyType = "Coupe",
                            Brand = "Ford",
                            Capacity = 3.7f,
                            Color = "Zielony",
                            FuelType = "Benzyna",
                            ImageUrl = "/img46.jpg",
                            Model = "Mustang",
                            PricePerDay = 830f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 47,
                            BodyType = "Coupe",
                            Brand = "Chevrolet",
                            Capacity = 3.6f,
                            Color = "Srebrny",
                            FuelType = "Benzyna",
                            ImageUrl = "/img47.jpg",
                            Model = "Camaro",
                            PricePerDay = 900f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 48,
                            BodyType = "Sedan",
                            Brand = "Dodge",
                            Capacity = 3.7f,
                            Color = "Zielony",
                            FuelType = "Benzyna",
                            ImageUrl = "/img48.jpg",
                            Model = "Charger",
                            PricePerDay = 1200f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 49,
                            BodyType = "SUV",
                            Brand = "Lexus",
                            Capacity = 3.5f,
                            Color = "Szary",
                            FuelType = "Benzyna",
                            ImageUrl = "/img49.jpg",
                            Model = "RX 350",
                            PricePerDay = 990f,
                            ProductionYear = 2020
                        });
                });

            modelBuilder.Entity("Backend.Models.Fault", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("ReportedUserId");

                    b.ToTable("Faults");
                });

            modelBuilder.Entity("Backend.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 9,
                            EndDate = new DateTime(2021, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 8
                        },
                        new
                        {
                            Id = 2,
                            CarId = 13,
                            EndDate = new DateTime(2021, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CarId = 13,
                            EndDate = new DateTime(2021, 12, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 7
                        },
                        new
                        {
                            Id = 4,
                            CarId = 16,
                            EndDate = new DateTime(2021, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CarId = 5,
                            EndDate = new DateTime(2021, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            CarId = 1,
                            EndDate = new DateTime(2021, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CarId = 14,
                            EndDate = new DateTime(2021, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 12, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 10
                        },
                        new
                        {
                            Id = 8,
                            CarId = 10,
                            EndDate = new DateTime(2021, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 10
                        },
                        new
                        {
                            Id = 9,
                            CarId = 2,
                            EndDate = new DateTime(2021, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            CarId = 3,
                            EndDate = new DateTime(2021, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            CarId = 19,
                            EndDate = new DateTime(2021, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 15
                        },
                        new
                        {
                            Id = 12,
                            CarId = 16,
                            EndDate = new DateTime(2021, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5
                        });
                });

            modelBuilder.Entity("Backend.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("StarsOutOfFive")
                        .HasColumnType("real");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            DateOfIssue = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Świetne auto, bardzo wygodne!",
                            StarsOutOfFive = 4.5f,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            CarId = 1,
                            DateOfIssue = new DateTime(2020, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "W porządku, ale oczekiwałem czegoś więcej od tego modelu.",
                            StarsOutOfFive = 3.5f,
                            UserId = 6
                        },
                        new
                        {
                            Id = 3,
                            CarId = 2,
                            DateOfIssue = new DateTime(2022, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Idealne auto do jazdy po mieście.",
                            StarsOutOfFive = 5f,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            CarId = 3,
                            DateOfIssue = new DateTime(2020, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Przyzwoite, ale miało problemy z silnikiem.",
                            StarsOutOfFive = 3f,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CarId = 4,
                            DateOfIssue = new DateTime(2019, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Niezbyt dobre doświadczenie. Auto było głośne.",
                            StarsOutOfFive = 2.5f,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CarId = 5,
                            DateOfIssue = new DateTime(2021, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Ogólnie dobre, ale mogłoby być bardziej oszczędne.",
                            StarsOutOfFive = 4f,
                            UserId = 5
                        },
                        new
                        {
                            Id = 7,
                            CarId = 6,
                            DateOfIssue = new DateTime(2022, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Absolutnie je uwielbiam!",
                            StarsOutOfFive = 5f,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CarId = 7,
                            DateOfIssue = new DateTime(2021, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Bardzo niezawodne auto na długie trasy.",
                            StarsOutOfFive = 4.2f,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CarId = 8,
                            DateOfIssue = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Przyzwoita wydajność, ale mogłoby być cichsze.",
                            StarsOutOfFive = 3.5f,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CarId = 9,
                            DateOfIssue = new DateTime(2022, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Świetne auto w tej cenie.",
                            StarsOutOfFive = 4.5f,
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            CarId = 10,
                            DateOfIssue = new DateTime(2020, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Miało pewne problemy mechaniczne.",
                            StarsOutOfFive = 3f,
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            CarId = 11,
                            DateOfIssue = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Najlepsze auto, jakim jeździłem!",
                            StarsOutOfFive = 5f,
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            CarId = 12,
                            DateOfIssue = new DateTime(2019, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Dobre na krótkie trasy, ale nie najlepsze na długie podróże.",
                            StarsOutOfFive = 3.5f,
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            CarId = 13,
                            DateOfIssue = new DateTime(2020, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Dobre prowadzenie i przyzwoita ekonomia paliwa.",
                            StarsOutOfFive = 4f,
                            UserId = 14
                        },
                        new
                        {
                            Id = 15,
                            CarId = 14,
                            DateOfIssue = new DateTime(2021, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Wygodne, ale dosyć wolne.",
                            StarsOutOfFive = 3.5f,
                            UserId = 15
                        },
                        new
                        {
                            Id = 16,
                            CarId = 15,
                            DateOfIssue = new DateTime(2022, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Jestem bardzo zadowolony, na pewno wynajmę ponownie!",
                            StarsOutOfFive = 4.5f,
                            UserId = 2
                        },
                        new
                        {
                            Id = 17,
                            CarId = 16,
                            DateOfIssue = new DateTime(2021, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Nieźle, ale mogłoby być lepsze.",
                            StarsOutOfFive = 3f,
                            UserId = 2
                        },
                        new
                        {
                            Id = 18,
                            CarId = 17,
                            DateOfIssue = new DateTime(2022, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Przekroczyło moje oczekiwania.",
                            StarsOutOfFive = 5f,
                            UserId = 3
                        },
                        new
                        {
                            Id = 19,
                            CarId = 18,
                            DateOfIssue = new DateTime(2020, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Dobre, ale miało drobne problemy.",
                            StarsOutOfFive = 3.5f,
                            UserId = 4
                        },
                        new
                        {
                            Id = 20,
                            CarId = 19,
                            DateOfIssue = new DateTime(2021, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Solidne osiągi i bardzo niezawodne.",
                            StarsOutOfFive = 4f,
                            UserId = 5
                        },
                        new
                        {
                            Id = 21,
                            CarId = 20,
                            DateOfIssue = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Świetne auto, bardzo komfortowe!",
                            StarsOutOfFive = 4.5f,
                            UserId = 2
                        },
                        new
                        {
                            Id = 22,
                            CarId = 21,
                            DateOfIssue = new DateTime(2020, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Przyzwoite, ale miało problemy z silnikiem.",
                            StarsOutOfFive = 3f,
                            UserId = 2
                        },
                        new
                        {
                            Id = 23,
                            CarId = 22,
                            DateOfIssue = new DateTime(2022, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Idealne auto do jazdy po mieście.",
                            StarsOutOfFive = 5f,
                            UserId = 3
                        },
                        new
                        {
                            Id = 24,
                            CarId = 23,
                            DateOfIssue = new DateTime(2019, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Nie najlepsze doświadczenie. Samochód był głośny.",
                            StarsOutOfFive = 2.5f,
                            UserId = 4
                        },
                        new
                        {
                            Id = 25,
                            CarId = 24,
                            DateOfIssue = new DateTime(2021, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Dobre auto, ale spalanie mogłoby być niższe.",
                            StarsOutOfFive = 4f,
                            UserId = 5
                        },
                        new
                        {
                            Id = 26,
                            CarId = 25,
                            DateOfIssue = new DateTime(2020, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Oczekiwałem czegoś więcej, ale jest w porządku.",
                            StarsOutOfFive = 3.5f,
                            UserId = 6
                        },
                        new
                        {
                            Id = 27,
                            CarId = 26,
                            DateOfIssue = new DateTime(2022, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Uwielbiam ten samochód, idealny na dłuższe podróże!",
                            StarsOutOfFive = 5f,
                            UserId = 7
                        },
                        new
                        {
                            Id = 28,
                            CarId = 27,
                            DateOfIssue = new DateTime(2021, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Bardzo wygodne i niezawodne auto.",
                            StarsOutOfFive = 4.5f,
                            UserId = 8
                        },
                        new
                        {
                            Id = 29,
                            CarId = 28,
                            DateOfIssue = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Dobra wydajność, ale nieco głośny silnik.",
                            StarsOutOfFive = 3.5f,
                            UserId = 9
                        },
                        new
                        {
                            Id = 30,
                            CarId = 29,
                            DateOfIssue = new DateTime(2022, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Świetny stosunek jakości do ceny.",
                            StarsOutOfFive = 4.5f,
                            UserId = 10
                        },
                        new
                        {
                            Id = 31,
                            CarId = 30,
                            DateOfIssue = new DateTime(2020, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Samochód miał kilka problemów mechanicznych.",
                            StarsOutOfFive = 3f,
                            UserId = 11
                        },
                        new
                        {
                            Id = 32,
                            CarId = 31,
                            DateOfIssue = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Najlepszy samochód, jakim kiedykolwiek jeździłem!",
                            StarsOutOfFive = 5f,
                            UserId = 12
                        },
                        new
                        {
                            Id = 33,
                            CarId = 32,
                            DateOfIssue = new DateTime(2019, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Dobre na krótkie trasy, ale długie podróże są męczące.",
                            StarsOutOfFive = 3.5f,
                            UserId = 13
                        },
                        new
                        {
                            Id = 34,
                            CarId = 33,
                            DateOfIssue = new DateTime(2020, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Auto dobrze się prowadzi i jest ekonomiczne.",
                            StarsOutOfFive = 4f,
                            UserId = 14
                        },
                        new
                        {
                            Id = 35,
                            CarId = 34,
                            DateOfIssue = new DateTime(2021, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Wygodny, ale zbyt głośny.",
                            StarsOutOfFive = 3.5f,
                            UserId = 15
                        },
                        new
                        {
                            Id = 36,
                            CarId = 35,
                            DateOfIssue = new DateTime(2022, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Bardzo zadowolony, wynajmę ponownie!",
                            StarsOutOfFive = 4.5f,
                            UserId = 2
                        },
                        new
                        {
                            Id = 37,
                            CarId = 36,
                            DateOfIssue = new DateTime(2021, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Nieźle, ale można by kilka rzeczy poprawić.",
                            StarsOutOfFive = 3f,
                            UserId = 2
                        },
                        new
                        {
                            Id = 38,
                            CarId = 37,
                            DateOfIssue = new DateTime(2022, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Auto przekroczyło moje oczekiwania.",
                            StarsOutOfFive = 5f,
                            UserId = 3
                        },
                        new
                        {
                            Id = 39,
                            CarId = 38,
                            DateOfIssue = new DateTime(2020, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Dobre auto, ale drobne problemy były widoczne.",
                            StarsOutOfFive = 3.5f,
                            UserId = 4
                        },
                        new
                        {
                            Id = 40,
                            CarId = 39,
                            DateOfIssue = new DateTime(2021, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Solidny samochód, niezawodny na trasie.",
                            StarsOutOfFive = 4f,
                            UserId = 5
                        },
                        new
                        {
                            Id = 41,
                            CarId = 40,
                            DateOfIssue = new DateTime(2021, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Fantastyczny SUV, gorąco polecam!",
                            StarsOutOfFive = 4.5f,
                            UserId = 3
                        },
                        new
                        {
                            Id = 42,
                            CarId = 41,
                            DateOfIssue = new DateTime(2022, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Całkiem niezły, ale nie idealny.",
                            StarsOutOfFive = 3.5f,
                            UserId = 5
                        },
                        new
                        {
                            Id = 43,
                            CarId = 42,
                            DateOfIssue = new DateTime(2022, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Idealny na rodzinne wycieczki!",
                            StarsOutOfFive = 5f,
                            UserId = 6
                        },
                        new
                        {
                            Id = 44,
                            CarId = 43,
                            DateOfIssue = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Niesamowite osiągi i prowadzenie.",
                            StarsOutOfFive = 5f,
                            UserId = 7
                        },
                        new
                        {
                            Id = 45,
                            CarId = 44,
                            DateOfIssue = new DateTime(2021, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Luksusowy samochód, wart swojej ceny.",
                            StarsOutOfFive = 4f,
                            UserId = 8
                        },
                        new
                        {
                            Id = 46,
                            CarId = 45,
                            DateOfIssue = new DateTime(2022, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Najlepsze coupe, jakim jeździłem.",
                            StarsOutOfFive = 5f,
                            UserId = 9
                        },
                        new
                        {
                            Id = 47,
                            CarId = 46,
                            DateOfIssue = new DateTime(2021, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Mocny silnik i piękny wygląd.",
                            StarsOutOfFive = 4.5f,
                            UserId = 10
                        },
                        new
                        {
                            Id = 48,
                            CarId = 47,
                            DateOfIssue = new DateTime(2022, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Agresywny design i solidne osiągi.",
                            StarsOutOfFive = 4f,
                            UserId = 11
                        },
                        new
                        {
                            Id = 49,
                            CarId = 48,
                            DateOfIssue = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Niezapomniane doświadczenie z autem typu muscle.",
                            StarsOutOfFive = 4.5f,
                            UserId = 12
                        },
                        new
                        {
                            Id = 50,
                            CarId = 49,
                            DateOfIssue = new DateTime(2022, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Przestronne i komfortowe dla całej rodziny.",
                            StarsOutOfFive = 4f,
                            UserId = 13
                        });
                });

            modelBuilder.Entity("Backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            FirstName = "admin",
                            IsAdmin = true,
                            LastName = "admin",
                            Password = "admin",
                            RegistrationDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "john.doe@gmail.com",
                            FirstName = "John",
                            IsAdmin = false,
                            LastName = "Doe",
                            Password = "password1",
                            RegistrationDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "john.doe"
                        },
                        new
                        {
                            Id = 3,
                            Email = "jane.smith@gmail.com",
                            FirstName = "Jane",
                            IsAdmin = false,
                            LastName = "Smith",
                            Password = "password2",
                            RegistrationDate = new DateTime(2020, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "jane.smith"
                        },
                        new
                        {
                            Id = 4,
                            Email = "bob.brown@gmail.com",
                            FirstName = "Bob",
                            IsAdmin = false,
                            LastName = "Brown",
                            Password = "password4",
                            RegistrationDate = new DateTime(2019, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "bob.brown"
                        },
                        new
                        {
                            Id = 5,
                            Email = "charlie.davis@gmail.com",
                            FirstName = "Charlie",
                            IsAdmin = false,
                            LastName = "Davis",
                            Password = "password5",
                            RegistrationDate = new DateTime(2021, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "charlie.davis"
                        },
                        new
                        {
                            Id = 6,
                            Email = "emily.white@gmail.com",
                            FirstName = "Emily",
                            IsAdmin = false,
                            LastName = "White",
                            Password = "password6",
                            RegistrationDate = new DateTime(2020, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "emily.white"
                        },
                        new
                        {
                            Id = 7,
                            Email = "david.miller@gmail.com",
                            FirstName = "David",
                            IsAdmin = false,
                            LastName = "Miller",
                            Password = "password7",
                            RegistrationDate = new DateTime(2019, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "david.miller"
                        },
                        new
                        {
                            Id = 8,
                            Email = "samantha.clark@gmail.com",
                            FirstName = "Samantha",
                            IsAdmin = false,
                            LastName = "Clark",
                            Password = "password8",
                            RegistrationDate = new DateTime(2021, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "samantha.clark"
                        },
                        new
                        {
                            Id = 9,
                            Email = "michael.wilson@gmail.com",
                            FirstName = "Michael",
                            IsAdmin = false,
                            LastName = "Wilson",
                            Password = "password9",
                            RegistrationDate = new DateTime(2020, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "michael.wilson"
                        },
                        new
                        {
                            Id = 10,
                            Email = "olivia.martinez@gmail.com",
                            FirstName = "Olivia",
                            IsAdmin = false,
                            LastName = "Martinez",
                            Password = "password10",
                            RegistrationDate = new DateTime(2022, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "olivia.martinez"
                        },
                        new
                        {
                            Id = 11,
                            Email = "lucas.garcia@gmail.com",
                            FirstName = "Lucas",
                            IsAdmin = false,
                            LastName = "Garcia",
                            Password = "password11",
                            RegistrationDate = new DateTime(2018, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "lucas.garcia"
                        },
                        new
                        {
                            Id = 12,
                            Email = "sophia.lopez@gmail.com",
                            FirstName = "Sophia",
                            IsAdmin = false,
                            LastName = "Lopez",
                            Password = "password12",
                            RegistrationDate = new DateTime(2021, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "sophia.lopez"
                        },
                        new
                        {
                            Id = 13,
                            Email = "james.thomas@gmail.com",
                            FirstName = "James",
                            IsAdmin = false,
                            LastName = "Thomas",
                            Password = "password13",
                            RegistrationDate = new DateTime(2020, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "james.thomas"
                        },
                        new
                        {
                            Id = 14,
                            Email = "ava.moore@gmail.com",
                            FirstName = "Ava",
                            IsAdmin = false,
                            LastName = "Moore",
                            Password = "password14",
                            RegistrationDate = new DateTime(2021, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "ava.moore"
                        },
                        new
                        {
                            Id = 15,
                            Email = "isabella.taylor@gmail.com",
                            FirstName = "Isabella",
                            IsAdmin = false,
                            LastName = "Taylor",
                            Password = "password15",
                            RegistrationDate = new DateTime(2019, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "isabella.taylor"
                        },
                        new
                        {
                            Id = 16,
                            Email = "alice.johnson@gmail.com",
                            FirstName = "Alice",
                            IsAdmin = false,
                            LastName = "Johnson",
                            Password = "password3",
                            RegistrationDate = new DateTime(2022, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "alice.johnson"
                        });
                });

            modelBuilder.Entity("CarUser", b =>
                {
                    b.Property<int>("FavouriteCarsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersFavouritesId")
                        .HasColumnType("int");

                    b.HasKey("FavouriteCarsId", "UsersFavouritesId");

                    b.HasIndex("UsersFavouritesId");

                    b.ToTable("UserFavouriteCars", (string)null);
                });

            modelBuilder.Entity("Backend.Models.Fault", b =>
                {
                    b.HasOne("Backend.Models.Car", "Car")
                        .WithMany("Faults")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.User", "ReportedUser")
                        .WithMany("ReportedFaults")
                        .HasForeignKey("ReportedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("ReportedUser");
                });

            modelBuilder.Entity("Backend.Models.Reservation", b =>
                {
                    b.HasOne("Backend.Models.Car", "Car")
                        .WithMany("Reservations")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Backend.Models.Review", b =>
                {
                    b.HasOne("Backend.Models.Car", "Car")
                        .WithMany("Reviews")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarUser", b =>
                {
                    b.HasOne("Backend.Models.Car", null)
                        .WithMany()
                        .HasForeignKey("FavouriteCarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersFavouritesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Models.Car", b =>
                {
                    b.Navigation("Faults");

                    b.Navigation("Reservations");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Backend.Models.User", b =>
                {
                    b.Navigation("ReportedFaults");

                    b.Navigation("Reservations");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
