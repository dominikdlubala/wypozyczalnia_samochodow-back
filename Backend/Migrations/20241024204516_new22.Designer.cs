// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241024204516_new22")]
    partial class new22
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BodyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Capacity")
                        .HasColumnType("real");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PricePerDay")
                        .HasColumnType("real");

                    b.Property<int>("ProductionYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BodyType = "Sedan",
                            Brand = "Toyota",
                            Capacity = 1.6f,
                            Color = "Red",
                            FuelType = "Petrol",
                            ImageUrl = "/img1.jpg",
                            Model = "Corolla",
                            PricePerDay = 86f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 2,
                            BodyType = "Hatchback",
                            Brand = "Ford",
                            Capacity = 2.2f,
                            Color = "Blue",
                            FuelType = "Diesel",
                            ImageUrl = "/img2.jpg",
                            Model = "Focus",
                            PricePerDay = 140f,
                            ProductionYear = 2008
                        },
                        new
                        {
                            Id = 3,
                            BodyType = "Sedan",
                            Brand = "Honda",
                            Capacity = 1.8f,
                            Color = "Blue",
                            FuelType = "Petrol",
                            ImageUrl = "/img3.jpg",
                            Model = "Civic",
                            PricePerDay = 37f,
                            ProductionYear = 2015
                        },
                        new
                        {
                            Id = 4,
                            BodyType = "SUV",
                            Brand = "BMW",
                            Capacity = 3f,
                            Color = "Black",
                            FuelType = "Diesel",
                            ImageUrl = "/img4.jpg",
                            Model = "X5",
                            PricePerDay = 226f,
                            ProductionYear = 2010
                        },
                        new
                        {
                            Id = 5,
                            BodyType = "Kombi",
                            Brand = "Audi",
                            Capacity = 1.4f,
                            Color = "Silver",
                            FuelType = "Petrol",
                            ImageUrl = "/img5.jpg",
                            Model = "A4",
                            PricePerDay = 185f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 6,
                            BodyType = "Hatchback",
                            Brand = "Volkswagen",
                            Capacity = 2f,
                            Color = "Black",
                            FuelType = "Diesel",
                            ImageUrl = "/img6.jpg",
                            Model = "Golf",
                            PricePerDay = 132f,
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = 7,
                            BodyType = "Sedan",
                            Brand = "Mercedes",
                            Capacity = 1.6f,
                            Color = "White",
                            FuelType = "Petrol",
                            ImageUrl = "/img7.jpg",
                            Model = "C-Class",
                            PricePerDay = 321f,
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = 8,
                            BodyType = "Hatchback",
                            Brand = "Opel",
                            Capacity = 1.7f,
                            Color = "Red",
                            FuelType = "Diesel",
                            ImageUrl = "/img8.jpg",
                            Model = "Astra",
                            PricePerDay = 61f,
                            ProductionYear = 2014
                        },
                        new
                        {
                            Id = 9,
                            BodyType = "Sedan",
                            Brand = "Ford",
                            Capacity = 2f,
                            Color = "Silver",
                            FuelType = "Petrol",
                            ImageUrl = "/img9.jpg",
                            Model = "Mondeo",
                            PricePerDay = 156f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 10,
                            BodyType = "Kombi",
                            Brand = "Skoda",
                            Capacity = 1.9f,
                            Color = "Gray",
                            FuelType = "Diesel",
                            ImageUrl = "/img10.jpg",
                            Model = "Octavia",
                            PricePerDay = 86f,
                            ProductionYear = 2011
                        },
                        new
                        {
                            Id = 11,
                            BodyType = "Hatchback",
                            Brand = "Renault",
                            Capacity = 1.6f,
                            Color = "Blue",
                            FuelType = "Petrol",
                            ImageUrl = "/img11.jpg",
                            Model = "Megane",
                            PricePerDay = 74f,
                            ProductionYear = 2013
                        },
                        new
                        {
                            Id = 12,
                            BodyType = "SUV",
                            Brand = "Nissan",
                            Capacity = 2f,
                            Color = "Black",
                            FuelType = "Diesel",
                            ImageUrl = "/img12.jpg",
                            Model = "Qashqai",
                            PricePerDay = 181f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 13,
                            BodyType = "Sedan",
                            Brand = "Mazda",
                            Capacity = 2.5f,
                            Color = "Red",
                            FuelType = "Petrol",
                            ImageUrl = "/img13.jpg",
                            Model = "6",
                            PricePerDay = 148f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 14,
                            BodyType = "Hatchback",
                            Brand = "Peugeot",
                            Capacity = 1.6f,
                            Color = "Silver",
                            FuelType = "Diesel",
                            ImageUrl = "/img14.jpg",
                            Model = "308",
                            PricePerDay = 91f,
                            ProductionYear = 2015
                        },
                        new
                        {
                            Id = 15,
                            BodyType = "Kombi",
                            Brand = "Volkswagen",
                            Capacity = 2f,
                            Color = "White",
                            FuelType = "Petrol",
                            ImageUrl = "/img15.jpg",
                            Model = "Passat",
                            PricePerDay = 238f,
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = 16,
                            BodyType = "Hatchback",
                            Brand = "Fiat",
                            Capacity = 1.2f,
                            Color = "Yellow",
                            FuelType = "Petrol",
                            ImageUrl = "/img16.jpg",
                            Model = "500",
                            PricePerDay = 70f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 17,
                            BodyType = "SUV",
                            Brand = "Audi",
                            Capacity = 3f,
                            Color = "Black",
                            FuelType = "Diesel",
                            ImageUrl = "/img17.jpg",
                            Model = "Q7",
                            PricePerDay = 321f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 18,
                            BodyType = "SUV",
                            Brand = "Kia",
                            Capacity = 2f,
                            Color = "Blue",
                            FuelType = "Diesel",
                            ImageUrl = "/img18.jpg",
                            Model = "Sportage",
                            PricePerDay = 101f,
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = 19,
                            BodyType = "Hatchback",
                            Brand = "Hyundai",
                            Capacity = 1.4f,
                            Color = "White",
                            FuelType = "Petrol",
                            ImageUrl = "/img19.jpg",
                            Model = "i30",
                            PricePerDay = 86f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 20,
                            BodyType = "SUV",
                            Brand = "Suzuki",
                            Capacity = 1.9f,
                            Color = "Green",
                            FuelType = "Diesel",
                            ImageUrl = "/img20.jpg",
                            Model = "Vitara",
                            PricePerDay = 136f,
                            ProductionYear = 2015
                        },
                        new
                        {
                            Id = 21,
                            BodyType = "Hatchback",
                            Brand = "Citroen",
                            Capacity = 1.6f,
                            Color = "Silver",
                            FuelType = "Petrol",
                            ImageUrl = "/img21.jpg",
                            Model = "C4",
                            PricePerDay = 86f,
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = 22,
                            BodyType = "SUV",
                            Brand = "Ford",
                            Capacity = 2f,
                            Color = "Red",
                            FuelType = "Diesel",
                            ImageUrl = "/img22.jpg",
                            Model = "Kuga",
                            PricePerDay = 169f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 23,
                            BodyType = "Sedan",
                            Brand = "BMW",
                            Capacity = 2f,
                            Color = "Gray",
                            FuelType = "Petrol",
                            ImageUrl = "/img23.jpg",
                            Model = "3 Series",
                            PricePerDay = 247f,
                            ProductionYear = 2021
                        },
                        new
                        {
                            Id = 24,
                            BodyType = "SUV",
                            Brand = "Toyota",
                            Capacity = 2.2f,
                            Color = "Black",
                            FuelType = "Diesel",
                            ImageUrl = "/img24.jpg",
                            Model = "RAV4",
                            PricePerDay = 205f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 25,
                            BodyType = "Sedan",
                            Brand = "Honda",
                            Capacity = 2.4f,
                            Color = "White",
                            FuelType = "Petrol",
                            ImageUrl = "/img25.jpg",
                            Model = "Accord",
                            PricePerDay = 164f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 26,
                            BodyType = "SUV",
                            Brand = "Mazda",
                            Capacity = 2.2f,
                            Color = "Red",
                            FuelType = "Diesel",
                            ImageUrl = "/img26.jpg",
                            Model = "CX-5",
                            PricePerDay = 214f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 27,
                            BodyType = "SUV",
                            Brand = "Hyundai",
                            Capacity = 2f,
                            Color = "Silver",
                            FuelType = "Diesel",
                            ImageUrl = "/img27.jpg",
                            Model = "Tucson",
                            PricePerDay = 177f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 28,
                            BodyType = "Hatchback",
                            Brand = "Audi",
                            Capacity = 1.8f,
                            Color = "Blue",
                            FuelType = "Petrol",
                            ImageUrl = "/img28.jpg",
                            Model = "A3",
                            PricePerDay = 123f,
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = 29,
                            BodyType = "SUV",
                            Brand = "Mercedes",
                            Capacity = 2.1f,
                            Color = "Black",
                            FuelType = "Diesel",
                            ImageUrl = "/img29.jpg",
                            Model = "GLC",
                            PricePerDay = 247f,
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = 30,
                            BodyType = "SUV",
                            Brand = "Volkswagen",
                            Capacity = 2f,
                            Color = "White",
                            FuelType = "Diesel",
                            ImageUrl = "/img30.jpg",
                            Model = "Tiguan",
                            PricePerDay = 202f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 31,
                            BodyType = "SUV",
                            Brand = "Jeep",
                            Capacity = 3f,
                            Color = "Black",
                            FuelType = "Diesel",
                            ImageUrl = "/img31.jpg",
                            Model = "Grand Cherokee",
                            PricePerDay = 321f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 32,
                            BodyType = "Hatchback",
                            Brand = "Ford",
                            Capacity = 1f,
                            Color = "Blue",
                            FuelType = "Petrol",
                            ImageUrl = "/img32.jpg",
                            Model = "Fiesta",
                            PricePerDay = 82f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 33,
                            BodyType = "Hatchback",
                            Brand = "Toyota",
                            Capacity = 1.3f,
                            Color = "White",
                            FuelType = "Petrol",
                            ImageUrl = "/img33.jpg",
                            Model = "Yaris",
                            PricePerDay = 74f,
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = 34,
                            BodyType = "Hatchback",
                            Brand = "Renault",
                            Capacity = 1.5f,
                            Color = "Red",
                            FuelType = "Diesel",
                            ImageUrl = "/img34.jpg",
                            Model = "Clio",
                            PricePerDay = 58f,
                            ProductionYear = 2015
                        },
                        new
                        {
                            Id = 35,
                            BodyType = "SUV",
                            Brand = "BMW",
                            Capacity = 2f,
                            Color = "Silver",
                            FuelType = "Diesel",
                            ImageUrl = "/img35.jpg",
                            Model = "X3",
                            PricePerDay = 247f,
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = 36,
                            BodyType = "Convertible",
                            Brand = "Mazda",
                            Capacity = 2f,
                            Color = "Red",
                            FuelType = "Petrol",
                            ImageUrl = "/img36.jpg",
                            Model = "MX-5",
                            PricePerDay = 185f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 37,
                            BodyType = "Hatchback",
                            Brand = "Volkswagen",
                            Capacity = 1f,
                            Color = "Blue",
                            FuelType = "Petrol",
                            ImageUrl = "/img37.jpg",
                            Model = "Polo",
                            PricePerDay = 70f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 38,
                            BodyType = "SUV",
                            Brand = "Honda",
                            Capacity = 2.2f,
                            Color = "Black",
                            FuelType = "Diesel",
                            ImageUrl = "/img38.jpg",
                            Model = "CR-V",
                            PricePerDay = 214f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 39,
                            BodyType = "SUV",
                            Brand = "Nissan",
                            Capacity = 1.6f,
                            Color = "Yellow",
                            FuelType = "Petrol",
                            ImageUrl = "/img39.jpg",
                            Model = "Juke",
                            PricePerDay = 86f,
                            ProductionYear = 2016
                        },
                        new
                        {
                            Id = 40,
                            BodyType = "SUV",
                            Brand = "Peugeot",
                            Capacity = 1.6f,
                            Color = "Silver",
                            FuelType = "Diesel",
                            ImageUrl = "/img40.jpg",
                            Model = "2008",
                            PricePerDay = 103f,
                            ProductionYear = 2017
                        },
                        new
                        {
                            Id = 41,
                            BodyType = "Sedan",
                            Brand = "Audi",
                            Capacity = 3.7f,
                            Color = "Black",
                            FuelType = "Petrol",
                            ImageUrl = "/img41.jpg",
                            Model = "A8",
                            PricePerDay = 514f,
                            ProductionYear = 2021
                        },
                        new
                        {
                            Id = 42,
                            BodyType = "SUV",
                            Brand = "Porsche",
                            Capacity = 3.8f,
                            Color = "Red",
                            FuelType = "Petrol",
                            ImageUrl = "/img42.jpg",
                            Model = "Cayenne",
                            PricePerDay = 740f,
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = 43,
                            BodyType = "Sedan",
                            Brand = "BMW",
                            Capacity = 4f,
                            Color = "White",
                            FuelType = "Petrol",
                            ImageUrl = "/img43.jpg",
                            Model = "M5",
                            PricePerDay = 575f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 44,
                            BodyType = "Sedan",
                            Brand = "Mercedes",
                            Capacity = 3.9f,
                            Color = "Silver",
                            FuelType = "Petrol",
                            ImageUrl = "/img44.jpg",
                            Model = "S-Class",
                            PricePerDay = 657f,
                            ProductionYear = 2020
                        },
                        new
                        {
                            Id = 45,
                            BodyType = "Convertible",
                            Brand = "Jaguar",
                            Capacity = 3.8f,
                            Color = "Green",
                            FuelType = "Petrol",
                            ImageUrl = "/img45.jpg",
                            Model = "F-Type",
                            PricePerDay = 781f,
                            ProductionYear = 2021
                        },
                        new
                        {
                            Id = 46,
                            BodyType = "Coupe",
                            Brand = "Ford",
                            Capacity = 3.7f,
                            Color = "Blue",
                            FuelType = "Petrol",
                            ImageUrl = "/img46.jpg",
                            Model = "Mustang",
                            PricePerDay = 548f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 47,
                            BodyType = "Coupe",
                            Brand = "Chevrolet",
                            Capacity = 3.6f,
                            Color = "Yellow",
                            FuelType = "Petrol",
                            ImageUrl = "/img47.jpg",
                            Model = "Camaro",
                            PricePerDay = 514f,
                            ProductionYear = 2018
                        },
                        new
                        {
                            Id = 48,
                            BodyType = "Sedan",
                            Brand = "Dodge",
                            Capacity = 3.7f,
                            Color = "Black",
                            FuelType = "Petrol",
                            ImageUrl = "/img48.jpg",
                            Model = "Charger",
                            PricePerDay = 452f,
                            ProductionYear = 2019
                        },
                        new
                        {
                            Id = 49,
                            BodyType = "SUV",
                            Brand = "Lexus",
                            Capacity = 3.5f,
                            Color = "White",
                            FuelType = "Petrol",
                            ImageUrl = "/img49.jpg",
                            Model = "RX 350",
                            PricePerDay = 390f,
                            ProductionYear = 2020
                        });
                });

            modelBuilder.Entity("Backend.Models.Fault", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("ReportedUserId");

                    b.ToTable("Faults");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 5,
                            DateOfIssue = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The engine makes a strange noise when accelerating.",
                            ReportedUserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CarId = 10,
                            DateOfIssue = new DateTime(2020, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The air conditioning doesn't work properly.",
                            ReportedUserId = 4
                        },
                        new
                        {
                            Id = 3,
                            CarId = 23,
                            DateOfIssue = new DateTime(2022, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The car pulls to the right when braking.",
                            ReportedUserId = 5
                        },
                        new
                        {
                            Id = 4,
                            CarId = 27,
                            DateOfIssue = new DateTime(2019, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Check engine light is on.",
                            ReportedUserId = 7
                        },
                        new
                        {
                            Id = 5,
                            CarId = 33,
                            DateOfIssue = new DateTime(2021, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The rear suspension makes a creaking noise.",
                            ReportedUserId = 8
                        },
                        new
                        {
                            Id = 6,
                            CarId = 38,
                            DateOfIssue = new DateTime(2020, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The car has difficulty starting in cold weather.",
                            ReportedUserId = 10
                        },
                        new
                        {
                            Id = 7,
                            CarId = 40,
                            DateOfIssue = new DateTime(2022, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The brakes feel spongy and unresponsive.",
                            ReportedUserId = 11
                        },
                        new
                        {
                            Id = 8,
                            CarId = 47,
                            DateOfIssue = new DateTime(2021, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The driver's side window is stuck and won't roll down.",
                            ReportedUserId = 12
                        });
                });

            modelBuilder.Entity("Backend.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 9,
                            EndDate = new DateTime(2021, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 8
                        },
                        new
                        {
                            Id = 2,
                            CarId = 13,
                            EndDate = new DateTime(2021, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CarId = 13,
                            EndDate = new DateTime(2021, 12, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 7
                        },
                        new
                        {
                            Id = 4,
                            CarId = 16,
                            EndDate = new DateTime(2021, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CarId = 5,
                            EndDate = new DateTime(2021, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            CarId = 1,
                            EndDate = new DateTime(2021, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CarId = 14,
                            EndDate = new DateTime(2021, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 12, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 10
                        },
                        new
                        {
                            Id = 8,
                            CarId = 10,
                            EndDate = new DateTime(2021, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 10
                        },
                        new
                        {
                            Id = 9,
                            CarId = 2,
                            EndDate = new DateTime(2021, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            CarId = 3,
                            EndDate = new DateTime(2021, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 11,
                            CarId = 19,
                            EndDate = new DateTime(2021, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 15
                        },
                        new
                        {
                            Id = 12,
                            CarId = 16,
                            EndDate = new DateTime(2021, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2021, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5
                        });
                });

            modelBuilder.Entity("Backend.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("StarsOutOfFive")
                        .HasColumnType("real");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            DateOfIssue = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Great car, very comfortable!",
                            StarsOutOfFive = 4.5f,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CarId = 3,
                            DateOfIssue = new DateTime(2020, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Decent, but had some issues with the engine.",
                            StarsOutOfFive = 3f,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CarId = 2,
                            DateOfIssue = new DateTime(2022, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Perfect car for city driving.",
                            StarsOutOfFive = 5f,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CarId = 4,
                            DateOfIssue = new DateTime(2019, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Not the best experience. The car was noisy.",
                            StarsOutOfFive = 2.5f,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            CarId = 5,
                            DateOfIssue = new DateTime(2021, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Good overall, but could be more fuel efficient.",
                            StarsOutOfFive = 4f,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            CarId = 1,
                            DateOfIssue = new DateTime(2020, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Okay, but I expected more from this model.",
                            StarsOutOfFive = 3.5f,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            CarId = 6,
                            DateOfIssue = new DateTime(2022, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Absolutely loved it!",
                            StarsOutOfFive = 5f,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            CarId = 7,
                            DateOfIssue = new DateTime(2021, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Very reliable car for long distances.",
                            StarsOutOfFive = 4.2f,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            CarId = 8,
                            DateOfIssue = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Decent performance, but could be quieter.",
                            StarsOutOfFive = 3.8f,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            CarId = 9,
                            DateOfIssue = new DateTime(2022, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Amazing car for the price.",
                            StarsOutOfFive = 4.6f,
                            UserId = 10
                        },
                        new
                        {
                            Id = 11,
                            CarId = 10,
                            DateOfIssue = new DateTime(2020, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Had some mechanical issues.",
                            StarsOutOfFive = 2.8f,
                            UserId = 11
                        },
                        new
                        {
                            Id = 12,
                            CarId = 11,
                            DateOfIssue = new DateTime(2021, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Best car I've driven so far!",
                            StarsOutOfFive = 4.9f,
                            UserId = 12
                        },
                        new
                        {
                            Id = 13,
                            CarId = 12,
                            DateOfIssue = new DateTime(2019, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Good for short trips, but not the best for long journeys.",
                            StarsOutOfFive = 3.2f,
                            UserId = 13
                        },
                        new
                        {
                            Id = 14,
                            CarId = 13,
                            DateOfIssue = new DateTime(2020, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Good handling and decent fuel economy.",
                            StarsOutOfFive = 4.3f,
                            UserId = 14
                        },
                        new
                        {
                            Id = 15,
                            CarId = 14,
                            DateOfIssue = new DateTime(2021, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Comfortable but maintenance was expensive.",
                            StarsOutOfFive = 3.7f,
                            UserId = 15
                        },
                        new
                        {
                            Id = 16,
                            CarId = 15,
                            DateOfIssue = new DateTime(2022, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Very satisfied with this car, will rent again!",
                            StarsOutOfFive = 4.5f,
                            UserId = 1
                        },
                        new
                        {
                            Id = 17,
                            CarId = 16,
                            DateOfIssue = new DateTime(2021, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Not bad, but it could use some improvements.",
                            StarsOutOfFive = 2.9f,
                            UserId = 2
                        },
                        new
                        {
                            Id = 18,
                            CarId = 17,
                            DateOfIssue = new DateTime(2022, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Exceeded my expectations.",
                            StarsOutOfFive = 5f,
                            UserId = 3
                        },
                        new
                        {
                            Id = 19,
                            CarId = 18,
                            DateOfIssue = new DateTime(2020, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Good, but had some minor issues.",
                            StarsOutOfFive = 3.5f,
                            UserId = 4
                        },
                        new
                        {
                            Id = 20,
                            CarId = 19,
                            DateOfIssue = new DateTime(2021, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewContent = "Solid performance and very reliable.",
                            StarsOutOfFive = 4f,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("Backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            IsAdmin = false,
                            LastName = "Doe",
                            Password = "password1",
                            RegistrationDate = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "john.doe"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Jane",
                            IsAdmin = false,
                            LastName = "Smith",
                            Password = "password2",
                            RegistrationDate = new DateTime(2020, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "jane.smith"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Alice",
                            IsAdmin = false,
                            LastName = "Johnson",
                            Password = "password3",
                            RegistrationDate = new DateTime(2022, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "alice.johnson"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Bob",
                            IsAdmin = false,
                            LastName = "Brown",
                            Password = "password4",
                            RegistrationDate = new DateTime(2019, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "bob.brown"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Charlie",
                            IsAdmin = false,
                            LastName = "Davis",
                            Password = "password5",
                            RegistrationDate = new DateTime(2021, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "charlie.davis"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Emily",
                            IsAdmin = false,
                            LastName = "White",
                            Password = "password6",
                            RegistrationDate = new DateTime(2020, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "emily.white"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "David",
                            IsAdmin = false,
                            LastName = "Miller",
                            Password = "password7",
                            RegistrationDate = new DateTime(2019, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "david.miller"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Samantha",
                            IsAdmin = false,
                            LastName = "Clark",
                            Password = "password8",
                            RegistrationDate = new DateTime(2021, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "samantha.clark"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Michael",
                            IsAdmin = false,
                            LastName = "Wilson",
                            Password = "password9",
                            RegistrationDate = new DateTime(2020, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "michael.wilson"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Olivia",
                            IsAdmin = false,
                            LastName = "Martinez",
                            Password = "password10",
                            RegistrationDate = new DateTime(2022, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "olivia.martinez"
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Lucas",
                            IsAdmin = false,
                            LastName = "Garcia",
                            Password = "password11",
                            RegistrationDate = new DateTime(2018, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "lucas.garcia"
                        },
                        new
                        {
                            Id = 12,
                            FirstName = "Sophia",
                            IsAdmin = false,
                            LastName = "Lopez",
                            Password = "password12",
                            RegistrationDate = new DateTime(2021, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "sophia.lopez"
                        },
                        new
                        {
                            Id = 13,
                            FirstName = "James",
                            IsAdmin = false,
                            LastName = "Thomas",
                            Password = "password13",
                            RegistrationDate = new DateTime(2020, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "james.thomas"
                        },
                        new
                        {
                            Id = 14,
                            FirstName = "Ava",
                            IsAdmin = false,
                            LastName = "Moore",
                            Password = "password14",
                            RegistrationDate = new DateTime(2021, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "ava.moore"
                        },
                        new
                        {
                            Id = 15,
                            FirstName = "Isabella",
                            IsAdmin = false,
                            LastName = "Taylor",
                            Password = "password15",
                            RegistrationDate = new DateTime(2019, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "isabella.taylor"
                        });
                });

            modelBuilder.Entity("CarUser", b =>
                {
                    b.Property<int>("FavouriteCarsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersFavouritesId")
                        .HasColumnType("int");

                    b.HasKey("FavouriteCarsId", "UsersFavouritesId");

                    b.HasIndex("UsersFavouritesId");

                    b.ToTable("UserFavouriteCars", (string)null);
                });

            modelBuilder.Entity("Backend.Models.Fault", b =>
                {
                    b.HasOne("Backend.Models.Car", "Car")
                        .WithMany("Faults")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.User", "ReportedUser")
                        .WithMany("ReportedFaults")
                        .HasForeignKey("ReportedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("ReportedUser");
                });

            modelBuilder.Entity("Backend.Models.Reservation", b =>
                {
                    b.HasOne("Backend.Models.Car", "Car")
                        .WithMany("Reservations")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Backend.Models.Review", b =>
                {
                    b.HasOne("Backend.Models.Car", "Car")
                        .WithMany("Reviews")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarUser", b =>
                {
                    b.HasOne("Backend.Models.Car", null)
                        .WithMany()
                        .HasForeignKey("FavouriteCarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersFavouritesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Models.Car", b =>
                {
                    b.Navigation("Faults");

                    b.Navigation("Reservations");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Backend.Models.User", b =>
                {
                    b.Navigation("ReportedFaults");

                    b.Navigation("Reservations");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
